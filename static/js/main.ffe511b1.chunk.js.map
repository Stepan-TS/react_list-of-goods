{"version":3,"sources":["App.tsx","components/GoodItem/GoodItem.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsItem","_ref","good","_jsx","children","GoodsList","goods","map","goodsFromServer","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","_createClass","key","value","_this$state","this","visibleGoods","_toConsumableArray","sort","good1","good2","localeCompare","getReorderedGoods","_jsxs","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,0GCfQC,EAA6B,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAC/CC,cAAA,MACE,UAAQ,OAAMC,SAEbF,KCFQG,EAA6B,SAAHJ,GAAA,IAAMK,EAAKL,EAALK,MAAK,OAChDH,cAAA,MAAAC,SACGE,EAAMC,KAAI,SAAAL,GAAI,OACbC,cAACH,EAAS,CAACE,KAAMA,GAAWA,SFHrBM,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAART,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KAwCN,IAAMU,EAAG,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAyBZ,OAzBYP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACdM,MAAyB,CACvBC,YAAY,EACZC,SAAU5B,EAAS6B,MACpBd,EAEDe,eAAiB,WACff,EAAKgB,SAAS,CAAEH,SAAU5B,EAASgC,YACpCjB,EAEDkB,aAAe,WACblB,EAAKgB,SAAS,CAAEH,SAAU5B,EAASkC,UACpCnB,EAEDoB,QAAU,WACRpB,EAAKgB,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAEtBZ,EAEDqB,MAAQ,WACNrB,EAAKgB,SAAU,CACbJ,YAAY,EACZC,SAAU5B,EAAS6B,QAEtBd,EA8DA,OA9DAsB,YAAA3B,EAAA,EAAA4B,IAAA,SAAAC,MAED,WACE,IAAAC,EAAiCC,KAAKf,MAA9BE,EAAQY,EAARZ,SAAUD,EAAUa,EAAVb,WACZpB,EA1DH,SACLA,EAAeL,GAEd,IADC0B,EAAQ1B,EAAR0B,SAAUD,EAAUzB,EAAVyB,WAENe,EAAYC,YAAOpC,GAiBzB,OAfAmC,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQlB,GACN,KAAK5B,EAASgC,SACZ,OAAOa,EAAME,cAAcD,GAC7B,KAAK9C,EAASkC,OACZ,OAAOW,EAAM1B,OAAS2B,EAAM3B,OAC9B,QACE,OAAO,MAITQ,GACFe,EAAaP,UAGRO,EAqCSM,CAAkBvC,EAAiBgC,KAAKf,OAEtD,OACEuB,eAAA,OAAKC,UAAU,kBAAiB7C,SAAA,CAC9B4C,eAAA,OAAKC,UAAU,UAAS7C,SAAA,CACtBD,cAAA,UACE+C,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYxB,IAAa5B,EAASgC,WAGtCqB,QAASZ,KAAKX,eAAezB,SAC9B,wBAIDD,cAAA,UACE+C,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYxB,IAAa5B,EAASkC,SAGtCmB,QAASZ,KAAKR,aAAa5B,SAC5B,mBAIDD,cAAA,UACE+C,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAazB,IAGjB0B,QAASZ,KAAKN,QAAQ9B,SACvB,aAICsB,GAAeC,IAAa5B,EAAS6B,OACrCzB,cAAA,UACE+C,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKL,MAAM/B,SACrB,aAMLD,cAACE,EAAS,CAACC,MAAOA,WAGvBG,EAvFa,CAAS4C,IAAMC,WGxD/BC,IAASC,OACPrD,cAACM,EAAG,IACJgD,SAASC,eAAe,W","file":"static/js/main.ffe511b1.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState(({\n      isReversed: false,\n      sortType: SortType.NONE,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || (sortType !== SortType.NONE)) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList goods={goods} />\n      </div>\n    );\n  }\n}\n","type Props = {\n  good: string,\n};\n\nexport const GoodsItem: React.FC<Props> = ({ good }) => (\n  <li\n    data-cy=\"Good\"\n  >\n    {good}\n  </li>\n);\n","import { GoodsItem } from '../GoodItem/GoodItem';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodsItem good={good} key={good} />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}